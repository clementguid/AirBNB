{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/get-accomodations.service\";\nimport * as i2 from \"@angular/common\";\nfunction CardComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"id.id\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CardComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CardComponent_ng_container_0_div_1_Template, 3, 0, \"div\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.accomodation);\n  }\n}\nexport class CardComponent {\n  constructor(service) {\n    this.service = service;\n  }\n  ngOnInit() {\n    this.accomodation$ = this.service.getAccomodations();\n  }\n}\n_class = CardComponent;\n_class.ɵfac = function CardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.GetAccomodationsService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-card\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.accomodation$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","CardComponent_ng_container_0_div_1_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","accomodation","CardComponent","constructor","service","ngOnInit","accomodation$","getAccomodations","ɵɵdirectiveInject","i1","GetAccomodationsService","selectors","decls","vars","consts","template","CardComponent_Template","rf","ctx","CardComponent_ng_container_0_Template","ɵɵpipeBind1"],"sources":["C:\\Users\\VICTUS by HP\\Desktop\\Cours\\3A\\PW\\airbnb\\src\\app\\components\\card\\card.component.ts","C:\\Users\\VICTUS by HP\\Desktop\\Cours\\3A\\PW\\airbnb\\src\\app\\components\\card\\card.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GetAccomodationsService } from 'src/app/services/get-accomodations.service';\nimport { Logement } from 'src/models/Logements';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnInit {\n  \n  accomodation$: Observable <Array<Logement>>\n\n  constructor (private service: GetAccomodationsService){}\n\n  ngOnInit(): void {\n    this.accomodation$ = this.service.getAccomodations()\n  }\n\n}\n","    <ng-container *ngIf=\"accomodation$ | async as accomodations\">\n\n        <div \n      *ngFor=\"let accomodation of accomodation\" >\n\n      <h1>id.id</h1>\n    \n    \n    \n    \n    </div>\n\n    </ng-container>"],"mappings":";;;;;;ICEQA,EAAA,CAAAC,cAAA,UACyC;IAEvCD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IALhBH,EAAA,CAAAI,uBAAA,GAA6D;IAEzDJ,EAAA,CAAAK,UAAA,IAAAC,2CAAA,iBAQE;IAENN,EAAA,CAAAO,qBAAA,EAAe;;;;IATYP,EAAA,CAAAQ,SAAA,GAAe;IAAfR,EAAA,CAAAS,UAAA,YAAAC,MAAA,CAAAC,YAAA,CAAe;;;ADQ9C,OAAM,MAAOC,aAAa;EAIxBC,YAAqBC,OAAgC;IAAhC,KAAAA,OAAO,GAAPA,OAAO;EAA2B;EAEvDC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,OAAO,CAACG,gBAAgB,EAAE;EACtD;;SARWL,aAAa;;mBAAbA,MAAa,EAAAZ,EAAA,CAAAkB,iBAAA,CAAAC,EAAA,CAAAC,uBAAA;AAAA;;QAAbR,MAAa;EAAAS,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXtB3B,EAAA,CAAAK,UAAA,IAAAwB,qCAAA,0BAYe;;;;MAZA7B,EAAA,CAAAS,UAAA,SAAAT,EAAA,CAAA8B,WAAA,OAAAF,GAAA,CAAAZ,aAAA,EAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}