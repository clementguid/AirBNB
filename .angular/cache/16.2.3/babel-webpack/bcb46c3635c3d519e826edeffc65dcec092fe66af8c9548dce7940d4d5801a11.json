{"ast":null,"code":"var _class;\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GetAccomodationsService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/accommodations ';\n  }\n  /* Récupère l'id envoyé par le header */\n  getAccomodations() {\n    return this.http.get(this.url);\n  }\n}\n_class = GetAccomodationsService;\n_class.ɵfac = function GetAccomodationsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\n/ * Je n'ai pas eu le temps d'implémenter cette méthode mais elle était déstinée à rechercher les logements par ID sur la bdd afin de ne pas recharger tous les logements lorsqu'on ouvre la page détaillée d'un logement */;\ngetCitiesByName(city, String);\nObservable < Array < City >> {\n  return: this.http.get(`https://geo.api.gouv.fr/communes?nom=${city}`)\n};","map":{"version":3,"names":["Observable","GetAccomodationsService","constructor","http","url","getAccomodations","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","getCitiesByName","city","String","Array","City","return"],"sources":["C:\\Users\\VICTUS by HP\\Desktop\\Cours\\3A\\PW\\airbnb\\src\\app\\services\\get-accomodations.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Logement } from 'src/models/Logements';\nimport { City } from 'src/models/city';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetAccomodationsService {\n  private url = 'http://localhost:3000/accommodations ';\n\n\n  constructor(private http: HttpClient) { }\n\n  /* Récupère l'id envoyé par le header */\n  getAccomodations(){\n    return this.http.get<Array<Logement>>(this.url);\n  }\n\n/ * Je n'ai pas eu le temps d'implémenter cette méthode mais elle était déstinée à rechercher les logements par ID sur la bdd afin de ne pas recharger tous les logements lorsqu'on ouvre la page détaillée d'un logement */\n  getCitiesByName(city: String) : Observable<Array<City>>{\n    return this.http.get<Array<City>>(`https://geo.api.gouv.fr/communes?nom=${city}`);\n  }\n}\n"],"mappings":";AAIA,SAASA,UAAU,QAAQ,MAAM;;;AAOjC,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,GAAG,GAAG,uCAAuC;EAGb;EAExC;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,GAAG,CAAC;EACjD;;SATWH,uBAAuB;;mBAAvBA,MAAuB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAvBT,MAAuB;EAAAU,OAAA,EAAvBV,MAAuB,CAAAW,IAAA;EAAAC,UAAA,EAHtB;AAAM;AAcpB,4NAA4N;AAC1NC,eAAe,CAACC,IAAI,EAAEC,MAAM,CAAC;AAAGhB,UAAU,GAACiB,KAAK,GAACC,IAAI,IAAE;EACrDC,MAAM,EAAC,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAc,wCAAwCS,IAAI,EAAE;CACjF"},"metadata":{},"sourceType":"module","externalDependencies":[]}