{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nimport { mergeMap, map } from 'rxjs';\nexport let HeaderComponent = class HeaderComponent {\n  constructor(service) {\n    this.service = service;\n    this.userInput = '';\n    this.tabCity = [];\n    this.search = new EventEmitter();\n  }\n  ngOnInit() {\n    this.villes$ = this.service.getCitiesByName('Nan');\n    this.villes$.pipe(mergeMap(objets => objets), map(objet => objet.nom)).subscribe(nom => {\n      this.tabCity.push(nom);\n    });\n  }\n  onInputChange(search) {\n    this.search.emit(search.target.value);\n  }\n};\n__decorate([Output()], HeaderComponent.prototype, \"search\", void 0);\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})], HeaderComponent);","map":{"version":3,"names":["Component","Output","EventEmitter","mergeMap","map","HeaderComponent","constructor","service","userInput","tabCity","search","ngOnInit","villes$","getCitiesByName","pipe","objets","objet","nom","subscribe","push","onInputChange","emit","target","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\VICTUS by HP\\Desktop\\Cours\\3A\\PW\\airbnb\\src\\app\\components\\header\\header.component.ts"],"sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable, mergeMap, map } from 'rxjs';\nimport { City } from 'src/models/city';\nimport { GetAccomodationsService } from 'src/app/services/get-accomodations.service';\nimport { NgIf } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  villes$: Observable<Array<City>>\n  userInput: string = ''\n  tabCity: string[] = [];\n  \n\n  @Output() search: EventEmitter<string> = new EventEmitter()\n\n\n  constructor(private service: GetAccomodationsService){}\n\n  ngOnInit(): void{\n      this.villes$ = this.service.getCitiesByName('Nan')\n\n      this.villes$.pipe(\n        mergeMap(objets => objets),\n        map(objet => objet.nom)\n      ).subscribe(nom =>{\n        this.tabCity.push(nom)\n      })\n  }\n\n\n\n  public onInputChange(search: any): void {\n    this.search.emit(search.target.value)\n    \n  }\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AACvE,SAAqBC,QAAQ,EAAEC,GAAG,QAAQ,MAAM;AAYzC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAU1BC,YAAoBC,OAAgC;IAAhC,KAAAA,OAAO,GAAPA,OAAO;IAP3B,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,OAAO,GAAa,EAAE;IAGZ,KAAAC,MAAM,GAAyB,IAAIR,YAAY,EAAE;EAGL;EAEtDS,QAAQA,CAAA;IACJ,IAAI,CAACC,OAAO,GAAG,IAAI,CAACL,OAAO,CAACM,eAAe,CAAC,KAAK,CAAC;IAElD,IAAI,CAACD,OAAO,CAACE,IAAI,CACfX,QAAQ,CAACY,MAAM,IAAIA,MAAM,CAAC,EAC1BX,GAAG,CAACY,KAAK,IAAIA,KAAK,CAACC,GAAG,CAAC,CACxB,CAACC,SAAS,CAACD,GAAG,IAAG;MAChB,IAAI,CAACR,OAAO,CAACU,IAAI,CAACF,GAAG,CAAC;IACxB,CAAC,CAAC;EACN;EAIOG,aAAaA,CAACV,MAAW;IAC9B,IAAI,CAACA,MAAM,CAACW,IAAI,CAACX,MAAM,CAACY,MAAM,CAACC,KAAK,CAAC;EAEvC;CAED;AAvBWC,UAAA,EAATvB,MAAM,EAAE,C,8CAAkD;AAPhDI,eAAe,GAAAmB,UAAA,EAL3BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWtB,eAAe,CA8B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}